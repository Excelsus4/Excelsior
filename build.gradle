buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: false
        classpath "org.spongepowered:mixingradle:${mixingradle_version}"
        classpath "org.parchmentmc:librarian:${librarian_version}"
    }
}

// Apply plugins
plugins {
    id 'com.matthewprenger.cursegradle' version "${cursegradle_version}"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

// Basic project information
version = '1.0'
group = 'com.excelsus.excelsior'
archivesBaseName = 'excelsior'

// Configure Java version
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

// Minecraft Forge configurations
minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=excelsior.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'excelsior'
            mods {
                excelsior {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=excelsior.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'excelsior'
            mods {
                excelsior {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'excelsior', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                excelsior {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Repositories for dependencies
repositories {
    maven { url 'https://maven.minecraftforge.net' }
    mavenCentral()
    mavenLocal()
    maven { name 'Tterrag Maven'; url 'https://maven.tterrag.com/' }
    maven { name 'Progwml6 Maven'; url 'https://dvs1.progwml6.com/files/maven' }
    maven { name 'Blamejared Maven'; url 'https://maven.blamejared.com' }
    maven { name 'TheIllusiveC4 Maven'; url 'https://maven.theillusivec4.top/' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public' }
    maven { url 'https://maven.parchmentmc.org' }
}

// Dependencies
dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.8'

    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}-${create_version_build}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    compileOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}-forge-api:${jei_version}")
    implementation fg.deobf("mezz.jei:jei-${jei_minecraft_version}-forge:${jei_version}")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}")

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

// Mixin configurations
mixin {
    add sourceSets.main, 'excelsior.refmap.json'
    config 'excelsior.mixins.json'
    debug.verbose = true
    debug.export = true
}

// JAR manifest configurations
jar {
    manifest {
        attributes([
                "Specification-Title"     : "excelsior",
                "Specification-Vendor"    : "excelsus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "excelsus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': 'excelsior.mixins.json'
        ])
    }
}

// Configure build tasks
jar.finalizedBy('reobfJar')

// Configure publishing
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

// Configure Java compilation
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}